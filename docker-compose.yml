version: '3.8'

services:
  web:
    image: notification_service
    container_name: notification
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./notification_service:/app
    depends_on:
      - db
      - redis
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  db:
    image: postgres:alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: "redis:alpine"
    container_name: redis
    restart: always

  celery:
    image: ${CELERY_IMAGE}
    container_name: celery_worker
    restart: always
    volumes:
      - ./notification_service:/app
    depends_on:
      - db
      - redis
    command: sh -c "celery -A notification_service worker -l info"

  celery-beat:
    image: ${CELERY_IMAGE}
    container_name: celery_beat
    restart: always
    volumes:
      - ./notification_service:/app
    depends_on:
      - db
      - redis
      - celery
    command: sh -c "celery -A notification_service beat -l info"

volumes:
  postgres_data: